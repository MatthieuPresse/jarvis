<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="command.project.git.enabled">false</parameter>
    </parameters>

    <services>

        <service
            id="command.project.git"
            abstract="true"
        >
            <call method="setProjectConfigurationRepository">
                 <argument type="service" id="repository.project_configuration" />
            </call>

            <call method="setExec">
                <argument type="service" id="local.exec" />
            </call>

            <call method="setEnabled">
                 <argument>%command.project.git.enabled%</argument>
            </call>
        </service>

        <service
            id="command.project.git.clone"
            class="Jarvis\Command\Project\GitCloneCommand"
            parent="command.project.git"
        >
            <argument>project:git:clone</argument>

            <call method="setComposerInstallCommand">
                <argument type="service" id="command.project.composer.install" />
            </call>

            <call method="setSymfonyAssetsBuildCommand">
                <argument type="service" id="command.project.symfony.assets.build" />
            </call>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.status"
            class="Jarvis\Command\Project\GitStatusCommand"
            parent="command.project.git"
        >
            <argument>project:git:status</argument>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.log"
            class="Jarvis\Command\Project\GitLogCommand"
            parent="command.project.git"
        >
            <argument>project:git:log</argument>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.update"
            class="Jarvis\Command\Project\GitUpdateCommand"
            parent="command.project.git"
        >
            <argument>project:git:update</argument>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.mergetool"
            class="Jarvis\Command\Project\GitMergeToolCommand"
            parent="command.project.git"
        >
            <argument>project:git:mergetool</argument>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.hooks_install"
            class="Jarvis\Command\Project\GitHooksInstallCommand"
            parent="command.project.git"
        >
            <argument>project:git:hooks:install</argument>

            <call method="setSkeletonGitHooksDir">
                <argument>%git_hooks_skeleton_dir%</argument>
            </call>

            <call method="setLocalFilesystem">
                 <argument type="service" id="local.filesystem" />
            </call>

            <tag name="console.command" />
        </service>

        <service
            id="command.project.git.hooks_pre_commit"
            class="Jarvis\Command\Project\GitHookPreCommitCommand"
            parent="command.project.git"
        >
            <argument>project:git:pre-commit</argument>

            <call method="setLocalFilesystem">
                 <argument type="service" id="local.filesystem" />
            </call>

            <call method="setRemoteFilesystem">
                 <argument type="service" id="remote.filesystem" />
            </call>

            <call method="setExec">
                <argument type="service" id="local.exec" />
            </call>

            <call method="setSshExec">
                 <argument type="service" id="ssh.exec" />
            </call>

            <call method="setPhpCsFixer">
                 <argument type="service" id="remote.php_cs_fixer" />
            </call>

            <call method="setSymfonyRemoteConsoleExec">
                <argument type="service" id="symfony.exec" />
            </call>

            <call method="setLocalTmpStagingAreaRootDir">
                 <argument>%local_tmp_staging_area_root_dir%</argument>
            </call>

            <call method="setRemoteTmpStagingAreaRootDir">
                 <argument>%remote_tmp_staging_area_root_dir%</argument>
            </call>

            <tag name="console.command" />
        </service>

    </services>
</container>
